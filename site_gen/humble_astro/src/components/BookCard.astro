---
interface Props {
  id: number;
  name: string;
  description: string;
  contentType: string;
  url: string;
  ratingAverage: number;
  ratingCount: number;
  reviewCount: number;
  developers: string;
  bundleId?: number;
  bundleName?: string;
}

const { 
  id, 
  name, 
  description, 
  contentType, 
  url, 
  ratingAverage, 
  ratingCount, 
  reviewCount, 
  developers,
  bundleId,
  bundleName
} = Astro.props;

// Generate star rating
const generateStars = (rating: number) => {
  const fullStars = Math.floor(rating);
  const halfStar = rating % 1 >= 0.5;
  const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);
  
  let stars = '';
  for (let i = 0; i < fullStars; i++) {
    stars += '★';
  }
  if (halfStar) {
    stars += '½';
  }
  for (let i = 0; i < emptyStars; i++) {
    stars += '☆';
  }
  
  return stars;
};

// Truncate description
const truncateDescription = (desc: string, maxLength = 150) => {
  if (!desc){
    return "no parseable description found"
  }
  // Remove HTML tags
  const textOnly = desc.replace(/<\/?[^>]+(>|$)/g, "");
  
  if (textOnly.length <= maxLength) return textOnly;
  
  return textOnly.substring(0, maxLength) + '...';
};

const stars = generateStars(ratingAverage);
const truncatedDescription = truncateDescription(description);
---

<div class="card book-card">
  <div class="book-header">
    <span class="badge content-type">{contentType}</span>
    {developers && <span class="badge developer">{developers}</span>}
  </div>
  <h3 class="book-title">{name}</h3>
  
  <div class="rating">
    <div class="rating-stars">{stars}</div>
    <div class="rating-count">({ratingAverage.toFixed(1)}) {ratingCount} ratings</div>
  </div>
  
  <p class="book-description">{truncatedDescription}</p>
  
  {bundleId && bundleName && (
    <div class="book-bundle">
      <p>From bundle: <a href={`/bundles/${bundleId}`}>{bundleName}</a></p>
    </div>
  )}
  
  <div class="book-actions">
    <a href={`/books/${id}`} class="btn">View Details</a>
    {url && <a href={url} target="_blank" rel="noopener noreferrer" class="btn btn-secondary">Goodreads</a>}
  </div>
</div>

<style>
  .book-card {
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .book-header {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 0.5rem;
  }
  
  .book-title {
    margin-top: 0.5rem;
    margin-bottom: 0.75rem;
    line-height: 1.3;
  }
  
  .book-description {
    flex-grow: 1;
    margin-bottom: 1rem;
  }
  
  .book-bundle {
    margin-bottom: 1rem;
    font-size: 0.9rem;
  }
  
  .book-actions {
    display: flex;
    gap: 0.5rem;
    margin-top: auto;
  }
  
  .badge.content-type {
    background-color: var(--accent);
  }
  
  .badge.developer {
    background-color: var(--accent-light);
  }
</style>
