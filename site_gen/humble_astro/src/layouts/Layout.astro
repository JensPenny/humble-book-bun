---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" data-theme="light">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Humble Bundle Books Collection">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<!-- Prevent flash of wrong theme -->
		<script is:inline>
			(function() {
				// Immediately check and apply the theme before page renders
				const savedTheme = localStorage.getItem('theme');
				if (savedTheme) {
					document.documentElement.setAttribute('data-theme', savedTheme);
				} else {
					// Check system preference
					const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
					document.documentElement.setAttribute('data-theme', prefersDark ? 'dark' : 'light');
				}
			})();
		</script>
	</head>
	<body>
		<header>
			<nav>
				<div class="container">
					<a href="/" class="logo">Humble Bundle Books</a>
					<ul class="nav-links">
						<li><a href="/">Home</a></li>
						<li><button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode">
							<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sun-icon">
								<circle cx="12" cy="12" r="5"></circle>
								<line x1="12" y1="1" x2="12" y2="3"></line>
								<line x1="12" y1="21" x2="12" y2="23"></line>
								<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
								<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
								<line x1="1" y1="12" x2="3" y2="12"></line>
								<line x1="21" y1="12" x2="23" y2="12"></line>
								<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
								<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
							</svg>
							<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="moon-icon">
								<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
							</svg>
						</button></li>
					</ul>
				</div>
			</nav>
		</header>
		<main class="container">
			<slot />
		</main>
		<footer>
			<div class="container">
				<p>{new Date().getFullYear()} Made with &hearts; by <a href="https://dadand.dev">dadand.dev</a> </p>
			</div>
		</footer>

		<script>
			// Theme toggle functionality
			document.addEventListener('DOMContentLoaded', () => {
				const themeToggle = document.getElementById('theme-toggle');
				const htmlElement = document.documentElement;
				
				// Check for saved theme preference or use system preference
				const savedTheme = localStorage.getItem('theme');
				if (savedTheme) {
					htmlElement.setAttribute('data-theme', savedTheme);
				} else {
					// Check system preference
					const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
					htmlElement.setAttribute('data-theme', prefersDark ? 'dark' : 'light');
				}
				
				// Toggle theme when button is clicked
				if (themeToggle) {
					themeToggle.addEventListener('click', () => {
						const currentTheme = htmlElement.getAttribute('data-theme');
						const newTheme = currentTheme === 'light' ? 'dark' : 'light';
						
						htmlElement.setAttribute('data-theme', newTheme);
						localStorage.setItem('theme', newTheme);
					});
				}
			});
		</script>
	</body>
</html>

<style is:global>
	:root {
		/* Light theme variables (default) */
		--accent: #e86b1c;
		--accent-light: #f89e64;
		--accent-dark: #c24e00;
		--text: #333;
		--text-light: #666;
		--background: #ffffff;
		--background-light: #f5f5f5;
		--border: #ddd;
		--border-color: #ddd;
		--card-shadow: rgba(0, 0, 0, 0.05);
		--card-shadow-hover: rgba(0, 0, 0, 0.1);
	}
	
	/* Dark theme variables */
	html[data-theme="dark"] {
		--accent: #ff8c3f;
		--accent-light: #ffaa70;
		--accent-dark: #e86b1c;
		--text: #e0e0e0;
		--text-light: #a0a0a0;
		--background: #121212;
		--background-light: #1e1e1e;
		--border: #333;
		--border-color: #333;
		--card-shadow: rgba(0, 0, 0, 0.2);
		--card-shadow-hover: rgba(0, 0, 0, 0.4);
	}
	
	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}
	
	html {
		font-family: system-ui, sans-serif;
		background-color: var(--background);
		color: var(--text);
	}
	
	body {
		display: flex;
		flex-direction: column;
		min-height: 100vh;
	}
	
	.container {
		width: 100%;
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 1rem;
	}
	
	header {
		background-color: var(--accent);
		color: white;
		padding: 1rem 0;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	}
	
	nav {
		display: flex;
		align-items: center;
	}
	
	nav .container {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}
	
	.logo {
		font-size: 1.5rem;
		font-weight: bold;
		color: white;
		text-decoration: none;
	}
	
	.nav-links {
		display: flex;
		list-style: none;
	}
	
	.nav-links li {
		margin-left: 1.5rem;
	}
	
	.nav-links a {
		color: white;
		text-decoration: none;
		font-weight: 500;		
		transition: color 0.2s;
	}
	
	.nav-links a:hover {
		color: var(--background-light);
	}
	
	main {
		flex: 1;
		padding: 2rem 0;
	}
	
	footer {
		background-color: var(--background-light);
		padding: 1.5rem 0;
		text-align: center;
		color: var(--text-light);
		border-top: 1px solid var(--border);
	}
	
	h1 {
		font-size: 2.5rem;
		margin-bottom: 1.5rem;
		color: var(--accent-dark);
	}
	
	h2 {
		font-size: 2rem;
		margin-bottom: 1rem;
		color: var(--accent-dark);
	}
	
	h3 {
		font-size: 1.5rem;
		margin-bottom: 0.75rem;
	}
	
	p {
		line-height: 1.6;
		margin-bottom: 1rem;
	}
	
	a {
		color: var(--accent);
		text-decoration: none;
		transition: color 0.2s;
	}
	
	a:hover {
		color: var(--accent-dark);
	}
	
	.card {
		background-color: var(--background);
		border: 1px solid var(--border);
		border-radius: 8px;
		padding: 1.5rem;
		padding-bottom: 1.5rem;
		margin-bottom: 0.5rem;
		box-shadow: 0 2px 4px var(--card-shadow);
		transition: transform 0.2s, box-shadow 0.2s;
	}
	
	.card:hover {
		transform: translateY(-5px);
		box-shadow: 0 5px 15px var(--card-shadow-hover);
	}
	
	.card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 1.5rem;
	}

	.card-list {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}
	
	.badge {
		display: inline-block;
		background-color: var(--accent-light);
		color: white;
		padding: 0.25rem 0.5rem;
		border-radius: 4px;
		font-size: 0.7rem;
		font-weight: 500;
		margin-right: 0.5rem;
		margin-bottom: 0.5rem;
	}
	
	.btn {
		display: inline-block;
		background-color: var(--accent);
		color: white;
		padding: 0.5rem 1rem;
		border-radius: 4px;
		font-weight: 500;
		text-align: center;
		cursor: pointer;
		border: none;
		transition: background-color 0.2s;
	}
	
	.btn:hover {
		background-color: var(--accent-dark);
		color: white;
	}
	
	.btn-secondary {
		background-color: var(--background-light);
		color: var(--text);
		border: 1px solid var(--border);
	}
	
	.btn-secondary:hover {
		background-color: var(--border);
		color: var(--text);
	}
	
	.rating {
		display: flex;
		align-items: center;
		margin-bottom: 0.5rem;
	}
	
	.rating-stars {
		margin-right: 0.5rem;
		color: #f9a825;
    	font-size: 1.1rem;
	}
	
	.rating-count {
		color: var(--text-light);
		font-size: 0.8rem;
	}
	
	.date {
		color: var(--text-light);
		font-size: 0.875rem;
		margin-bottom: 0.5rem;
	}
	
	.description {
		margin-top: 1rem;
	}
	
	/* Theme toggle button styles */
	.theme-toggle {
		background: none;
		border: none;
		color: white;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 0.5rem;
		border-radius: 50%;
	}
	
	.theme-toggle:hover {
		background-color: rgba(255, 255, 255, 0.1);
	}
	
	.sun-icon {
		display: none;
	}
	
	.moon-icon {
		display: block;
	}
	
	html[data-theme="dark"] .sun-icon {
		display: block;
	}
	
	html[data-theme="dark"] .moon-icon {
		display: none;
	}
</style>
