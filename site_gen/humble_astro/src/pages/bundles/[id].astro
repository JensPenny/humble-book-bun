---
import Layout from '../../layouts/Layout.astro';
import BookListItem from '../../components/BookListItem.astro';
import bundles from '../../../data/bundles.json';
import bundlesWithBooks from '../../../data/bundles_with_books.json';

export function getStaticPaths() {
  return bundles.map(bundle => ({
    params: { id: bundle.id.toString() },
  }));
}

const { id } = Astro.params;
const bundleId = parseInt(id);

// Find the bundle with books
const bundleWithBooks = bundlesWithBooks.find(bundle => bundle.id === bundleId);
const books = bundleWithBooks?.books.sort((l, r) => {
  return (r.rating_average || 0) - (l.rating_average || 0)
  || (r.review_count || 0) - (l.review_count || 0);
});

if (!bundleWithBooks) {
  return Astro.redirect('/404');
}

// Format dates
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

const startDate = formatDate(bundleWithBooks.start_date);
const endDate = formatDate(bundleWithBooks.end_date);

// Calculate if bundle is active
const now = new Date();
const endDateObj = new Date(bundleWithBooks.end_date);
const isActive = now < endDateObj;

// Calculate days remaining if active
let daysRemaining = 0;
if (isActive) {
  const diffTime = Math.abs(endDateObj.getTime() - now.getTime());
  daysRemaining = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
}
---

<Layout title={bundleWithBooks.name}>
  <div class="bundle-header">
    <div class="bundle-info">
      <h1>{bundleWithBooks.name}</h1>
      
      <div class="bundle-meta">
        <div class="bundle-status">
          {isActive ? 
            <span class="badge active">Active - {daysRemaining} days remaining</span> : 
            <span class="badge inactive">Ended</span>
          }
          <span class="badge type">{bundleWithBooks.type}</span>
        </div>
        
        <div class="bundle-dates">
          {isActive ? 
          <p>Available until: {endDate}</p> :
          <p>Available: {startDate} - {endDate}</p>
        }
        </div>
      </div>
      
      {bundleWithBooks.url && (
        <a href={`https://www.humblebundle.com/${bundleWithBooks.url}`} 
           target="_blank" 
           rel="noopener noreferrer" 
           class="btn">
          View on Humble Bundle
        </a>
      )}
    </div>
  </div>
  
  <section>
    <h2>Books in this Bundle</h2>
    <div class="book-list">
      <div class="book-list-header">
        <div class="book-info-header">Book</div>
        <div class="book-rating-header">Rating</div>
        <div class="book-actions-header">Links</div>
      </div>
      {books && books.map(book => (
        <BookListItem
          id={book.id}
          name={book.name}
          contentType={book.content_type}
          url={book.url || ""}
          description={book.description}
          ratingAverage={book.rating_average || 0}
          ratingCount={book.rating_count || 0}
          developers={book.developers || ""}
        />
      ))}
    </div>
  </section>
  
  <div class="back-link">
    <a href="/" class="btn btn-secondary">‚Üê Back to All Bundles</a>
  </div>
</Layout>

<style>
  .bundle-header {
    background-color: var(--background-light);
    border-radius: 8px;
    padding: 2rem;
    margin-bottom: 2rem;
  }
  
  .bundle-meta {
    margin: 1rem 0 1.5rem;
  }
  
  .bundle-status {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 0.5rem;
  }
  
  .bundle-dates {
    color: var(--text-light);
    font-size: 0.9rem;
  }
  
  .badge.active {
    background-color: #4caf50;
  }
  
  .badge.inactive {
    background-color: #9e9e9e;
  }
  
  .badge.type {
    background-color: var(--accent);
  }
  
  section {
    margin-bottom: 3rem;
  }
  
  .back-link {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
  
  .book-list {
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden;
    background-color: var(--background);
  }
  
  .book-list-header {
    display: grid;
    grid-template-columns: 3fr 1fr 1fr;
    background-color: var(--background-light);
    padding: 0.75rem 1rem;
    font-weight: 600;
    border-bottom: 2px solid var(--border-color);
    gap: 1rem;
  }
  
  .book-info-header, .book-rating-header, .book-actions-header {
    font-size: 0.9rem;
    color: var(--text-light);
  }
  
  .book-actions-header {
    text-align: right;
  }
</style>
